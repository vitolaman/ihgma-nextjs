/* eslint-disable @next/next/no-img-element */
import React, { useEffect, useCallback, useState } from "react";
import { unescape } from "lodash";
import Head from "next/head";
import { useDispatch, useSelector } from "react-redux";
import { Header, Footer } from "../../components";
import { useRouter } from "next/router";

import { ACTION_TYPES } from "../../redux/actions/articleAction";

export default function Article() {
  const dispatch = useDispatch();
  const router = useRouter();
  // Using the useSelector Hook to fetch the state from store.

  const cartList = useSelector((state) => state?.articles?.cart);
  const totalCount = cartList.reduce(
    (total, item) => getSum(total, item.price * item.count),
    0
  );

  function addThousandsSeparators(number) {
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
  }

  function getSum(total, num) {
    return total + Math.round(num);
  }

  const handleUpdateCount = useCallback(
    (index, count) => {
      dispatch({
        type: ACTION_TYPES.UPDATE_COUNT,
        payload: { index, count },
      });
    },
    [dispatch]
  );

  const handleDeleteItem = useCallback(
    (index) => {
      dispatch({
        type: ACTION_TYPES.DELETE_ITEM,
        payload: index,
      });
    },
    [dispatch]
  );

  return (
    <div>
      <Head>
        <title>IHGMA</title>
        <meta name="description" content="Generated by IHGMA" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        <section className="bg-white py-8 lg:px-36">
          <div className="bg-white py-6 sm:py-8 lg:py-12">
            <div className="mx-auto max-w-screen-lg px-4 md:px-8">
              <div className="mb-6 sm:mb-10 lg:mb-16">
                <h2 className="mb-4 text-center text-2xl font-bold text-gray-800 md:mb-6 lg:text-3xl">
                  Your Cart
                </h2>
              </div>

              <div className="mb-5 flex flex-col sm:mb-8">
                {cartList?.length == 0 && <p>Keranjang anda masih kosong</p>}
                {cartList?.map((item, index) => {
                  return (
                    <div key={item.id} className="py-5 sm:py-8">
                      <div className="flex flex-wrap gap-4 sm:py-2.5 lg:gap-6">
                        <div className="sm:-my-2.5">
                          <a
                            href="#"
                            className="group relative block h-56 w-56 overflow-hidden  bg-gray-100"
                          >
                            <img
                              src={item?.main_picture}
                              loading="lazy"
                              alt="Photo by ThÃ¡i An"
                              className="h-full w-full object-cover object-center transition duration-200 group-hover:scale-110"
                            />
                          </a>
                        </div>

                        <div className="flex flex-1 flex-col justify-between">
                          <div>
                            <a
                              href="#"
                              className="mb-1 inline-block text-lg font-bold text-gray-800 transition duration-100 hover:text-gray-500 lg:text-xl"
                            >
                              {item?.name}
                            </a>

                            <span className="block text-gray-500">
                              {item?.name}
                            </span>
                          </div>
                          <div>
                            <span className="flex items-center gap-1 text-sm text-gray-500">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                className="h-5 w-5 text-green-500"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                              >
                                <path
                                  strokeLinecap="round"
                                  strokeLinejoin="round"
                                  strokeWidth="2"
                                  d="M5 13l4 4L19 7"
                                />
                              </svg>
                              In stock
                            </span>
                          </div>
                        </div>

                        <div className="flex w-full justify-between border-t pt-4 sm:w-auto sm:border-none sm:pt-0">
                          <div className="flex flex-col items-start gap-2">
                            <div className="flex h-12 w-20 overflow-hidden rounded border">
                              <input
                                value={item?.count}
                                className="w-full px-4 py-2 outline-none ring-inset ring-blue-300 transition duration-100 focus:ring"
                              />

                              <div className="flex flex-col divide-y border-l">
                                <button
                                  onClick={() => {
                                    handleUpdateCount(index, item?.count + 1);
                                  }}
                                  className="flex w-6 flex-1 select-none items-center justify-center bg-white leading-none transition duration-100 hover:bg-gray-100 active:bg-gray-200"
                                >
                                  +
                                </button>
                                <button
                                  onClick={() => {
                                    if (item?.count != 1) {
                                      handleUpdateCount(index, item?.count - 1);
                                    }
                                  }}
                                  className="flex w-6 flex-1 select-none items-center justify-center bg-white leading-none transition duration-100 hover:bg-gray-100 active:bg-gray-200"
                                >
                                  -
                                </button>
                              </div>
                            </div>

                            <button
                              onClick={() => {
                                handleDeleteItem(index);
                              }}
                              className="select-none text-sm font-semibold text-blue-800 transition duration-100 hover:text-blue-600 active:text-blue-700"
                            >
                              Delete
                            </button>
                          </div>

                          <div className="ml-4 pt-3 sm:pt-2 md:ml-8 lg:ml-16">
                            <span className="block font-bold text-gray-800 md:text-lg">
                              Rp. {addThousandsSeparators(item.price)}
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>

              <div className="flex flex-col items-end gap-4">
                <div className="w-full  bg-gray-100 p-4 sm:max-w-xs">
                  <div className="space-y-1">
                    <div className="flex justify-between gap-4 text-gray-500">
                      <span>Subtotal</span>
                      <span>{"Rp. " + addThousandsSeparators(totalCount)}</span>
                    </div>

                    {/* <div className="flex justify-between gap-4 text-gray-500">
                      <span>Pajak</span>
                      <span>IDR 15.000</span>
                    </div> */}
                  </div>

                  <div className="mt-4 border-t pt-4">
                    <div className="flex items-start justify-between gap-4 text-gray-800">
                      <span className="text-lg font-bold">Total</span>

                      <span className="flex flex-col items-end">
                        <span className="text-lg font-bold">
                          {"Rp. " + addThousandsSeparators(totalCount)}
                        </span>
                      </span>
                    </div>
                  </div>
                </div>

                <button
                  onClick={() => {
                    // handleAddToCart("fgh");
                  }}
                  className="inline-block  bg-blue-800 px-8 py-3 text-center text-sm font-semibold text-white outline-none ring-blue-300 transition duration-100 hover:bg-blue-700 focus-visible:ring active:bg-blue-700 md:text-base"
                >
                  Check out
                </button>
              </div>
            </div>
          </div>
        </section>
        <Footer />
      </main>
    </div>
  );
}
